{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      2.1.2 All Paths - Move\n#\tAuthor:       Pablo Silva\n#\tCreated:      11/07/2024\n#\tDescription:  Code for all of the paths in 2.1.2\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nDEBUG = False\nFWD = Event()\nRT = Event()\nLT = Event()\nPath_1 = Event()\nPath_2 = Event()\nPath_3 = Event()\nInfinite_Box_Path = Event()\nLoop_Number = 0\n\ndef when_started1():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    # Change the DEBUG mode to false in order to test code. Change to true in order to troubleshoot.\n    DEBUG = False\n    # This block selects which path will be executed.\n    Path_1.broadcast_and_wait()\n\ndef onevent_FWD_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"LEFT MOTOR - FWD\")\n    else:\n        Left_Motor.spin_for(FORWARD, 412.7388527, DEGREES)\n\ndef onevent_Path_1_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    # This is the movement for Path 1, it does not require any loops.\n    FWD.broadcast_and_wait()\n    LT.broadcast_and_wait()\n    FWD.broadcast_and_wait()\n    RT.broadcast_and_wait()\n    FWD.broadcast_and_wait()\n\ndef onevent_FWD_1():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"RIGHT MOTOR - FWD\")\n    else:\n        Right_Motor.spin_for(FORWARD, 412.7388527, DEGREES)\n\ndef onevent_Path_3_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, vexcode_brain_precision, vexcode_console_precision\n    # This is the movement for Path 3, it will loop the forward four times and turn right each time; repeat all of this thrice.\n    for repeat_count2 in range(3):\n        for repeat_count in range(4):\n            FWD.broadcast_and_wait()\n            wait(5, MSEC)\n        RT.broadcast_and_wait()\n        wait(5, MSEC)\n\ndef onevent_RT_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"LEFT MOTOR - RT\")\n    else:\n        Left_Motor.spin_for(FORWARD, 219.699216, DEGREES)\n\ndef onevent_Path_2_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    # This is the movement for Path 2, it loops the movement for Path 1 four times.\n    for repeat_count3 in range(4):\n        FWD.broadcast_and_wait()\n        LT.broadcast_and_wait()\n        FWD.broadcast_and_wait()\n        RT.broadcast_and_wait()\n        wait(5, MSEC)\n\ndef onevent_RT_1():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"RIGHT MOTOR - RT\")\n    else:\n        Right_Motor.spin_for(REVERSE, 219.699216, DEGREES)\n\ndef onevent_Infinite_Box_Path_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    Loop_Number = 1\n    # This is the movement for the infinite box path, it will FOREVER be on.\n    while True:\n        for repeat_count5 in range(int(Loop_Number)):\n            for repeat_count4 in range(4):\n                FWD.broadcast_and_wait()\n                LT.broadcast_and_wait()\n                wait(5, MSEC)\n            wait(5, MSEC)\n        brain.screen.print(Loop_Number, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n        Loop_Number = Loop_Number + 1\n        wait(5, MSEC)\n\ndef onevent_LT_0():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"LEFT MOTOR - LT\")\n    else:\n        Left_Motor.spin_for(REVERSE, 219.699216, DEGREES)\n\ndef onevent_LT_1():\n    global DEBUG, FWD, RT, LT, Path_1, Path_2, Path_3, Infinite_Box_Path, Loop_Number, vexcode_brain_precision, vexcode_console_precision\n    if DEBUG:\n        brain.screen.next_row()\n        brain.screen.print(\"RIGHT MOTOR - LT\")\n    else:\n        Right_Motor.spin_for(FORWARD, 219.699216, DEGREES)\n\n# system event handlers\nFWD(onevent_FWD_0)\nFWD(onevent_FWD_1)\nPath_1(onevent_Path_1_0)\nPath_3(onevent_Path_3_0)\nRT(onevent_RT_0)\nRT(onevent_RT_1)\nPath_2(onevent_Path_2_0)\nInfinite_Box_Path(onevent_Infinite_Box_Path_0)\nLT(onevent_LT_0)\nLT(onevent_LT_1)\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n\nwhen_started1()","textLanguage":"python","robotConfig":[],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}